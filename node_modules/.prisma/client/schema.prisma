generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model association_table {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  business_id Int?        @db.UnsignedInt
  user_id     Int?        @db.UnsignedInt
  businesses  businesses? @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "association_table_ibfk_1")
  users       users?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "association_table_ibfk_2")

  @@index([business_id], map: "business_id")
  @@index([user_id], map: "user_id")
}

model businesses {
  id                Int                      @id @default(autoincrement()) @db.UnsignedInt
  biz_name          String                   @db.VarChar(255)
  owner             String                   @db.VarChar(255)
  email             String                   @unique(map: "email") @db.VarChar(255)
  password          String                   @db.VarChar(255)
  business_type     businesses_business_type
  verified          Boolean?
  address           String                   @db.VarChar(255)
  image             String                   @db.VarChar(255)
  association_table association_table[]
  post              post[]
  users             users?                   @relation(fields: [usersId], references: [id])
  usersId           Int?                     @db.UnsignedInt
}

model post {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  business_id Int?        @db.UnsignedInt
  image       String      @db.VarChar(255)
  body        String      @db.VarChar(255)
  postedAT    DateTime    @default(now()) @db.Timestamp(0)
  businesses  businesses? @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_ibfk_1")

  @@index([business_id], map: "business_id")
}

model users {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  name              String              @db.VarChar(255)
  email             String              @unique(map: "email") @db.VarChar(255)
  username          String              @unique(map: "username") @db.VarChar(255)
  password          String              @db.VarChar(255)
  address           String              @db.VarChar(255)
  image             String              @db.VarChar(255)
  following         businesses[]
  association_table association_table[]
}

enum businesses_business_type {
  Beauty
  Food
  Coffee
  BusinessService
  Hobbies
  Other
}
